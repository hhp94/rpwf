% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_py_engine.R
\name{set_py_engine}
\alias{set_py_engine}
\title{Add information about the python module}
\usage{
set_py_engine(obj, py_base_learner, con = NULL, args = NULL)
}
\arguments{
\item{obj}{a model spec object generated by \code{\link[parsnip:set_engine]{parsnip::set_engine()}} and
\code{\link[parsnip:set_args]{parsnip::set_mode()}}}

\item{py_base_learner}{a character value that select the python base learner,
(i.e., XGBClassifier, DecisionTreeClassifier, etc.)}

\item{con}{optional \code{\link[DBI:dbConnect]{DBI::dbConnect()}} object created by \code{\link[=rpwf_db_con]{rpwf_db_con()}}.
If provided will perform check if the py_base_learner is in the database or not.}

\item{args}{arguments passed to the python base learner. Booleans should be
in R format (TRUE, FALSE). Must be in named list.}
}
\value{
a model spec object with additional attributes \code{self$py_base_learner}
and \code{self$py_base_learner_args}
}
\description{
Augment the model spec object generated by \code{{parsnip}} with information
needed to run sklearn models
}
\examples{
con = rpwf_db_con("db.SQLite", here::here())
parsnip::boost_tree() |>
parsnip::set_engine("xgboost") |>
parsnip::set_mode("classification") |>
set_py_engine("XGBClassifier", con,
              list(eval_metric = "logloss", use_label_encoder = FALSE,
                   verbosity = 0, silent = TRUE))
}
