% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_rpwf_main_R6_classes.R
\name{BaseEx}
\alias{BaseEx}
\title{Internal R6 Object Only for Setting up Inheritance}
\description{
A R6 object that provides a common set of methods to 1) store the metadata of
data in the db, and 2) export parquet files for python to import. Not
meant to be called manually.
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{hash}}{(\code{character()})\cr
hash of the object by \code{\link[rlang:hash]{rlang::hash()}}.}

\item{\code{pin_name}}{(\code{character()})\cr
pin_name of the file in the project folder.}

\item{\code{df}}{(\code{data.frame()})\cr
the df for the hyper param grid or the transformed df.}

\item{\code{con}}{(\code{DBI::dbConnect()})\cr
a \code{\link[DBI:dbConnect]{DBI::dbConnect()}} object, generated by \code{\link[=rpwf_connect_db]{rpwf_connect_db()}}.}

\item{\code{export_query}}{(\code{glue::glue_sql()})\cr
SQL query to upload metadata of the data into the db.}

\item{\code{queried_pin_name}}{(\code{glue::glue_sql()})\cr
Queried pin_name of the object.}

\item{\code{board}}{(\code{character()})\cr
a \code{{pins}} board object.}

\item{\code{dbname}}{name of the database.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BaseEx-new}{\code{BaseEx$new()}}
\item \href{#method-BaseEx-exec_query}{\code{BaseEx$exec_query()}}
\item \href{#method-BaseEx-set_hash}{\code{BaseEx$set_hash()}}
\item \href{#method-BaseEx-set_pin_name}{\code{BaseEx$set_pin_name()}}
\item \href{#method-BaseEx-find_pin_name_in_db}{\code{BaseEx$find_pin_name_in_db()}}
\item \href{#method-BaseEx-set_export_query}{\code{BaseEx$set_export_query()}}
\item \href{#method-BaseEx-set_df}{\code{BaseEx$set_df()}}
\item \href{#method-BaseEx-export_prep}{\code{BaseEx$export_prep()}}
\item \href{#method-BaseEx-export_db}{\code{BaseEx$export_db()}}
\item \href{#method-BaseEx-export_parquet}{\code{BaseEx$export_parquet()}}
\item \href{#method-BaseEx-export}{\code{BaseEx$export()}}
\item \href{#method-BaseEx-clone}{\code{BaseEx$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-new"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-new}{}}}
\subsection{Method \code{new()}}{
This class is the parent of RGrid and TrainDf R6 object, not meant to be
called.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$new(db_con)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{db_con}}{(\code{DbCon})\cr
a \code{DbCon} object, generated by \code{\link[=rpwf_connect_db]{rpwf_connect_db()}}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-exec_query"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-exec_query}{}}}
\subsection{Method \code{exec_query()}}{
Run the query that check if the object exists in the db by checking the
hash of the object in the db. Either find one unique row or no row.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$exec_query(query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{query}}{(\code{glue::glue_sql()})\cr
SQL query for either the hyper parameter grid or the transformed df.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-set_hash"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-set_hash}{}}}
\subsection{Method \code{set_hash()}}{
Pass the hash of the object to this function to set the hash attribute.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$set_hash(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{(\code{any})\cr
New hash, either an integer or string.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-set_pin_name"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-set_pin_name}{}}}
\subsection{Method \code{set_pin_name()}}{
Change the pin_name where the object is stored. Is NA only when no grid is
provided. Have to provide a train data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$set_pin_name(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{(\code{character()})\cr
Path to store the object on disk.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-find_pin_name_in_db"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-find_pin_name_in_db}{}}}
\subsection{Method \code{find_pin_name_in_db()}}{
Store the results of the query from the db in a data.frame. Query have to
return a df (so \code{\link[=nrow]{nrow()}} works) with 0 <= \code{nrow()} < 2.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$find_pin_name_in_db(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{(\code{data.frame()})\cr
New data frame generated by \code{self$exec_query}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-set_export_query"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-set_export_query}{}}}
\subsection{Method \code{set_export_query()}}{
Change the SQL query to export metadata to database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$set_export_query(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{(\code{glue::glue_sql()})\cr
New SQL query to export metadata.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-set_df"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-set_df}{}}}
\subsection{Method \code{set_df()}}{
If the hash of the new object is not found in the database, then new
data is prepared. If the data is found in the metadata but not in the
indicated pin_name then new data is also prepared. Otherwise, \code{self$df} is
NULL and will be skipped by the \code{BaseEx::self$export_parquet()} method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$set_df(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{(\code{data.frame()})\cr
Either a \code{\link[recipes:juice]{recipes::juice()}} object or a data.frame of the hyper param grid.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-export_prep"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-export_prep}{}}}
\subsection{Method \code{export_prep()}}{
If the db query found no existing metadata, then an export pin_name is made.
If the metadata is found but the associated data is not found, then an
export pin_name is also made. Else get the pin_name from the metadata in the db.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$export_prep(new_pin_name, new_export_query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_pin_name}}{(\code{character()})\cr
Path to the object.}

\item{\code{new_export_query}}{(\code{glue::glue_sql()})\cr
SQL query to export the obj metadata to the db.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-export_db"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-export_db}{}}}
\subsection{Method \code{export_db()}}{
If the \code{self$export_query} is generated because metadata is not found in
the database, then export the metadata to the db using this query.
Otherwise return NULL.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$export_db()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-export_parquet"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-export_parquet}{}}}
\subsection{Method \code{export_parquet()}}{
If the file specified by \code{self$pin_name} is not found, then export the file
as a parquet file to the location specified in the metadata.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$export_parquet()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-export"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-export}{}}}
\subsection{Method \code{export()}}{
Wrapper around exporting information to the db and writing the parquet
file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$export()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseEx-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BaseEx-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseEx$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
