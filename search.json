[{"path":"https://hhp94.github.io/rpwf/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rpwf authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hhp94.github.io/rpwf/articles/python_codes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Python Codes","text":"generating data R exporting necessary information, following codes can used get data python.","code":""},{"path":"https://hhp94.github.io/rpwf/articles/python_codes.html","id":"generate-data-in-r","dir":"Articles","previous_headings":"","what":"Generate data in R","title":"Python Codes","text":"want just transform data R export python, pins reticulate package works just fine. can rpwf, wraps around pins. Create pins::board_<board type> pass rpwf_connect_db(). Create database called \"db.SQLite\" rpwf_connect_db(). Create two recipes pass rpwf_data_set() Write transformed data, export metadata database, write board YAML file.","code":"library(rpwf) library(pins) library(recipes) #> Loading required package: dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: 'recipes' #> The following object is masked from 'package:stats': #>  #>     step tmp_dir <- tempdir() # Temp folder board <- board_temp() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) r <- recipe(mpg ~ ., data = mtcars) |>   step_normalize(all_numeric_predictors()) |>   rpwf_tag_recipe(\"r\")  r1 <- r |>   step_YeoJohnson(all_numeric_predictors()) |>   rpwf_tag_recipe(\"r1\")  d <- rpwf_data_set(r, r1, db_con = db_con) #> No pandas idx added. Use update_roles() with 'pd.index' for one #> No pandas idx added. Use update_roles() with 'pd.index' for one rpwf_write_df(d) #> Creating new version '20221123T020428Z-06963' #> Writing to pin 'df.1fc340af1fb12f5e3608144e8866158d.parquet' #> Creating new version '20221123T020428Z-4a858' #> Writing to pin 'df.9dcffb2bd7ec8761955df8ec1e395455.parquet' rpwf_export_db(d, db_con) #> Exporting workflows to db... #> [1] 2 rpwf_write_board_yaml(board, paste(tmp_dir, \"board.yml\", sep = \"/\"))"},{"path":"https://hhp94.github.io/rpwf/articles/python_codes.html","id":"get-the-data-in-python","dir":"Articles","previous_headings":"","what":"Get the data in python","title":"Python Codes","text":"Import modules Create board written yml file database object See exported wflow follows Pick wflow_id, create rpwf.Wflow object associated wflow_id Finally create rpwf.TrainDf object use get_df_X get_df_y methods get train pandas.DataFrame response pandas.Series","code":"from rpwf import database, rpwf from pathlib import Path  db_path = # <replace with tmp_dir> board_yml = # <replace with paste(tmp_dir, \"board.yml\", sep = \"/\")>  db_obj = database.Base(db_path) board_obj = database.Board(board_yml) db_obj.all_wflow()  # wflow_id    model_tag   recipe_tag    result_pin_name   model_pin_name # 1           None        r             None              None # 2           None        r1            None              None wflow_id = 2 wflow_obj = rpwf.Wflow(db_obj, board_obj, wflow_id) df_obj = rpwf.TrainDf(db_obj, board_obj, wflow_obj) X, y = df_obj.get_df_X(), df_obj.get_df_y()"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"rpwf","text":"Importantly, mice missForest R powerful imputation methods. find fitting model python can faster consume less memory equivalent model R, possibly due numpy bleeding edge implementations. rpwf allows wrangling data R access latest greatest ML packages python. Enabling use workflowset framework. Workflow sets can used pre-defined test experiments test engineered features affect model’s predictive performance. Allowing seamless deployment HPC clusters cloud computers pathing uploading results handled () SQLite database(s) pins package.","code":""},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"demonstration","dir":"Articles","previous_headings":"","what":"Demonstration","title":"rpwf","text":"Let’s demonstrate using sim_classification() function modeldata. Data balanced. ’s missing data. Re-code class, response variable, integers Add optional id column","code":"library(rpwf) library(dplyr) library(parsnip) library(recipes) library(ggplot2) library(pins) set.seed(123) tmp_dir <- tempdir() # Temp folder df <- modeldata::sim_classification(num_samples = 500, num_linear = 40) df[1:6, 1:6] #> # A tibble: 6 × 6 #>   class   two_factor_1 two_factor_2 non_linear_1 non_linear_2 non_linear_3 #>   <fct>          <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #> 1 class_2       -0.364       -1.08       -0.681         0.854        0.206 #> 2 class_2        0.292       -0.884      -0.711         0.666        0.943 #> 3 class_1        1.39         2.61       -0.702         0.733        0.379 #> 4 class_2       -0.354        0.535       0.0289        0.315        0.626 #> 5 class_2        1.06        -0.727      -0.0143        0.668        0.184 #> 6 class_1        2.26         2.15        0.233         0.464        0.659 table(df$class) #>  #> class_1 class_2  #>     228     272 sum(is.na(df)) #> [1] 0 df$class <- as.integer(df$class) - 1L df$id <- seq_len(nrow(df))"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"initialize-a-database","dir":"Articles","previous_headings":"","what":"Initialize a database","title":"rpwf","text":"Create pins::board_<board type> pass rpwf_connect_db(). Create database called \"db.SQLite\" rpwf_connect_db(). db_con object holds DBI connection SQLite database just created. Access db_con$con.","code":"board <- board_temp() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) db_con$con #   Path: <path>/rpwfDb/db.SQLite #   Extensions: TRUE"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"define-models-with-parsnip","dir":"Articles","previous_headings":"","what":"Define models with parsnip","title":"rpwf","text":"Identical {parsnips}, first choose model, .e., boost_tree(), choose R engine set_engine() classification regression set_mode(). , pipe object set_py_engine() function. py_module py_base_learner defines import base learner python script. tag optional parameter ’s helpful keeping track models. Arguments passed base learner python can passed ... set_py_engine() Check available models rpwf_avail_models() add another model rpwf_add_py_model().","code":"rpwf_avail_models(db_con) |> head() #>              py_module    py_base_learner r_engine     model_mode #> 1 sklearn.linear_model LogisticRegression   glmnet classification #> 2 sklearn.linear_model         ElasticNet   glmnet     regression #> 3          sklearn.svm                SVC  kernlab classification #> 4          sklearn.svm                SVR  kernlab     regression #> 5              xgboost      XGBClassifier  xgboost classification"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"xgboost","dir":"Articles","previous_headings":"Define models with parsnip","what":"xgboost","title":"rpwf","text":"fix n_estimators 50 tune learning rate. arguments can found xgboost docs. , pass argument n_estimators = 50 set_py_engine(). going tune 6 hyper parameters passing tune() functions just like {parsnips}.","code":"# This model is equivalent to the following python codes:  # from xgboost import XGBClassifier # # base_learner = XGBClassifier( #   eval_metric = \"logloss\", #   use_label_encoder = False, #   verbosity = 0, #   silent = True # )  xgb_model <- boost_tree(   mtry = tune(),   min_n = tune(),   tree_depth = tune(),   learn_rate = tune(),   loss_reduction = tune(),   sample_size = tune() ) |>   set_engine(\"xgboost\") |>   set_mode(\"classification\") |>   set_py_engine(     \"xgboost\",     \"XGBClassifier\",     rpwf_model_tag = \"xgboost\",     eval_metric = \"logloss\",     n_estimators = 50,     use_label_encoder = FALSE,     verbosity = 0,     silent = TRUE   )"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"svm","dir":"Articles","previous_headings":"Define models with parsnip","what":"svm","title":"rpwf","text":"example, cache_size wouldn’t reduce fit time data small. fix kernel parameter rbf. tidymodels defines svm_poly() svm_rbf() separately polynomial basis svm radial basis svm sklearn.svm.SVC defines kernel parameter.","code":"svm_rbf_model <- svm_rbf(   cost = tune(),   rbf_sigma = tune() ) |>   set_engine(\"kernlab\") |>   set_mode(\"classification\") |>   set_py_engine(     \"sklearn.svm\",     \"SVC\",     rpwf_model_tag = \"svm_rbf\",     kernel = \"rbf\", # fix kernel parameter = \"rbf\"     cache_size = 500   )"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"glm","dir":"Articles","previous_headings":"Define models with parsnip","what":"glm","title":"rpwf","text":"Let’s also fit elastic net model.","code":"enet_model <- logistic_reg(   penalty = tune(),   mixture = tune() ) |>   set_engine(\"glmnet\") |>   set_mode(\"classification\") |>   set_py_engine(     \"sklearn.linear_model\",     \"LogisticRegression\",     rpwf_model_tag = \"glmnet\",     solver = \"saga\",     penalty = \"elasticnet\",     max_iter = 1000   )"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"hyper-parameter-tuning","dir":"Articles","previous_headings":"","what":"Hyper parameter tuning","title":"rpwf","text":"sensible hyper parameters ranges functions go beyond random grid regular grid dials::grid_max_entropy(), dials::grid_latin_hypercube(). dials::grid_latin_hypercube() helpful models lot hyper parameters xgboost. svm_rbf_model, tuning just 2 hyper parameters 2-D grid dials::grid_regular() provide sufficient coverage hyper parameter space acceptable speed. Updating range hyper parameter space similar works dials. Just provide tuning functions (create new ones) hyper_par_fun parameter. Models specific tuning grids can added step set_r_grid().","code":""},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"xgboost-1","dir":"Articles","previous_headings":"Hyper parameter tuning","what":"xgboost","title":"rpwf","text":"xgboost_model, let’s use dials::grid_latin_hypercube(). Let’s limit max_depth. , add named list hyper_par_fun parameter.","code":"xgb_model <- xgb_model |>   set_r_grid(     grid_fun = dials::grid_latin_hypercube,     hyper_par_fun = list(tree_depth = dials::tree_depth(range(2, 5))),     size = 100   )"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"svm-1","dir":"Articles","previous_headings":"Hyper parameter tuning","what":"svm","title":"rpwf","text":"svm_rbf_model, let’s use 2D regular grid.","code":"svm_rbf_model <- svm_rbf_model |>   set_r_grid(dials::grid_regular, levels = 10)"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"glm-1","dir":"Articles","previous_headings":"Hyper parameter tuning","what":"glm","title":"rpwf","text":"Let’s also use 2D regular grid enet model. However, changed range l1 penalty allows greater regularization strength since scikit-learn inverse penalty value logistic regression implementation.","code":"enet_model <- enet_model |>   set_r_grid(dials::grid_regular,     list(penalty = dials::penalty(range = c(-8, 0.5))),     levels = 10   )"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"define-transformation-pipelines-with-recipes","dir":"Articles","previous_headings":"","what":"Define transformation pipelines with recipes","title":"rpwf","text":"Use formula role interface specify response predictors. base recipe used gauge baseline performance model. pca recipe used de-correlate variables. step_pca() conveniently provides parameter keep arbitrary threshold variance explained. choose 95%. pd.index special role. mark column conversion pandas index python. , column df$id become pandas.DataFrame index. Pipe recipe rpwf_tag_recipe() add description recipe.","code":"common <- recipe(class ~ ., data = df) |>   step_mutate(class = as.integer(class)) |>   update_role(id, new_role = \"pd.index\")  ### xgb recipes xgb_base_rec <- common |>   rpwf_tag_recipe(\"xgb_base\")  xgb_pca_rec <- xgb_base_rec |>   step_normalize(all_numeric_predictors()) |>   step_pca(threshold = .95) |>   rpwf_tag_recipe(\"xgb_pca\")  ### glm and svm recipes scaled_base_rec <- common |>   step_normalize(all_numeric_predictors()) |>   rpwf_tag_recipe(\"scaled_base\")  scaled_pca_rec <- scaled_base_rec |>   step_pca(threshold = .95) |>   rpwf_tag_recipe(\"scaled_pca\")"},{"path":[]},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"rpwf_workflow_set","dir":"Articles","previous_headings":"Create workflowsets","what":"rpwf_workflow_set()","title":"rpwf","text":"function rpwf_workflow_set() mimics workflowsets::workflow_set(). creates combination provided recipes models. , one can work resulting data.frame just like data.frame (e.g., filtering redundant workflows etc.). One workflow_set xgboost one svm glm created rbind() one final workflow_set. cost parameter specify measure predictive performance optimized . Look values scikit-learn docs. Custom cost functions possible require coding python side.","code":"### xgboost workflow_set xgb_wfs <- rpwf_workflow_set(   preprocs = list(xgb_base_rec, xgb_pca_rec),   models = list(xgb_model),   cost = \"roc_auc\" )  ### svm and glm workflow_set svm_glm_wfs <- rpwf_workflow_set(   preprocs = list(scaled_base_rec, scaled_pca_rec),   models = list(svm_rbf_model, enet_model),   cost = \"roc_auc\" )  ### combined workflow_set all_wfs <- rbind(xgb_wfs, svm_glm_wfs)"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"rpwf_augment","dir":"Articles","previous_headings":"Create workflowsets","what":"rpwf_augment()","title":"rpwf","text":"mtry positive integer R converted sklearn’s colsample_bytree positive proportions. penalty R reciprocated sklearn logistic regression. order l1 penalty > 1 (large time), range upper bound changed positive smaller 1. Checking generated grids, can see names hyper parameters renamed conform scikit-learn API. dimensions grids. always good check make sure didn’t accidentally make grid ’s big.","code":"all_wfs <- rpwf_augment(all_wfs, db_con) all_wfs |>   dplyr::select(model_tag, recipe_tag, costs) #> # A tibble: 6 × 3 #>   model_tag recipe_tag  costs   #>   <chr>     <chr>       <chr>   #> 1 xgboost   xgb_base    roc_auc #> 2 xgboost   xgb_pca     roc_auc #> 3 svm_rbf   scaled_base roc_auc #> 4 glmnet    scaled_base roc_auc #> 5 svm_rbf   scaled_pca  roc_auc #> 6 glmnet    scaled_pca  roc_auc sapply(unique(all_wfs$grids), head) #> [[1]] #> # A tibble: 6 × 6 #>   colsample_bytree min_child_weight max_depth learning_rate        gamma subsa…¹ #>              <dbl>            <int>     <int>         <dbl>        <dbl>   <dbl> #> 1            0.533                7         5       0.00437      2.51e-2   0.478 #> 2            0.244               31         4       0.191        1.69e-9   0.835 #> 3            0.511                7         4       0.260        2.23e-8   0.996 #> 4            0.733               20         2       0.0257       5.94e-4   0.225 #> 5            0.711               32         4       0.00658      1.46e+0   0.309 #> 6            0.911                3         4       0.00111      9.41e-7   0.642 #> # … with abbreviated variable name ¹​subsample #>  #> [[2]] #> # A tibble: 6 × 2 #>         C   gamma #>     <dbl>   <dbl> #> 1 1024    0.00862 #> 2  323.   0.00862 #> 3  102.   0.00862 #> 4   32    0.00862 #> 5   10.1  0.00862 #> 6    3.17 0.00862 #>  #> [[3]] #> # A tibble: 6 × 2 #>            C l1_ratio #>        <dbl>    <dbl> #> 1 100000000      0.05 #> 2  11364637.     0.05 #> 3   1291550.     0.05 #> 4    146780.     0.05 #> 5     16681.     0.05 #> 6      1896.     0.05 sapply(unique(all_wfs$grids), nrow) #> [1] 100 100 100"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"export-data-as-parquets-and-add-to-database-","dir":"Articles","previous_headings":"","what":"Export data as parquets and add to database.","title":"rpwf","text":"two types parquets files: 1) hyper param grids, 2) train/test data. rpwf_write_grid() rpwf_write_df() write parquets. get around , one can either work manageable number workflows time, split work multiple different databases run export functions parallel databases. Export board information YAML file. finally, export meta data database rpwf_export_db().","code":"rpwf_write_grid(all_wfs) rpwf_write_df(all_wfs) rpwf_write_board_yaml(board, paste(tmp_dir, \"board.yml\", sep = \"/\")) rpwf_export_db(all_wfs, db_con) #> [1] 6"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"run-the-workflow-in-python","dir":"Articles","previous_headings":"","what":"Run the workflow in python","title":"rpwf","text":"rpwf python codes contains scripts performs model fitting. also templates experiment using data generated R. example, use nested_resampling.py script, terminal, run following command get list arguments following Jupyter notebook cell following command display workflows exported. positional argument path database. -b flag path exported board YAML file associated db. -s flag shows workflows present database. -flag runs workflow hasn’t run. -w flag accept list ids (.e., 1 2 3 4) specify workflow run. -f flag force run overwrite results workflow already run. -c flag indicates number CPU cores dedicated model fitting task. -icv -icr flags number vfold-cv repeats inner loop used hyper parameters tuning. -ocv -ocr flags number vfold-cv repeats outer loop used testing predictive performance. Let’s run nested CV 5 CV * 2 repeats inner loop 5 CV * 2 repeats outer loop.","code":"python -m rpwf.script.nested_resampling -h %run -m rpwf.script.nested_resampling -h %run -m rpwf.script.nested_resampling $<path to the db> -b $<path to board yaml> -s %run -m rpwf.script.nested_resampling $<path to the db> -b $<path to board yaml> \\   -a -c 7 -icv 5 -icr 2 -ocv 5 -ocr 2"},{"path":"https://hhp94.github.io/rpwf/articles/rpwf.html","id":"visualize-the-results","dir":"Articles","previous_headings":"","what":"Visualize the results","title":"rpwf","text":"Results can imported back R passing db_con object rpwf_results(). can now just manipulate results R.","code":"fit_results <- rpwf_results(db_con) fit_results |>   tidyr::unnest(fit_results) |>   ggplot(aes(y = roc_auc, x = recipe_tag, color = recipe_tag)) +   geom_boxplot() +   geom_jitter() +   facet_wrap(~model_tag, scale = \"free_x\") +   theme_bw()"},{"path":"https://hhp94.github.io/rpwf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hung Pham. Author, maintainer.","code":""},{"path":"https://hhp94.github.io/rpwf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pham H (2022). rpwf: Create Workflow tidymodels. Fit Models scikit-learn. R package version 0.2.1, https://hhp94.github.io/rpwf/.","code":"@Manual{,   title = {rpwf: Create Workflow with {tidymodels}. Fit Models with scikit-learn},   author = {Hung Pham},   year = {2022},   note = {R package version 0.2.1},   url = {https://hhp94.github.io/rpwf/}, }"},{"path":"https://hhp94.github.io/rpwf/index.html","id":"rpwf","dir":"","previous_headings":"","what":"Create Workflow with {tidymodels}. Fit Models with scikit-learn","title":"Create Workflow with {tidymodels}. Fit Models with scikit-learn","text":"{rpwf} lightweight R Python package enables: hyper parameter grids generation using dials functions grid_max_entropy(). vast libraries data transformation methods splines basis expansion, data reduction, multiple imputation. testing generated data transformation pipeline  scikit-learn. streamlining use HPC cloud computing speed feature engineering experimentation.","code":""},{"path":[]},{"path":"https://hhp94.github.io/rpwf/index.html","id":"r","dir":"","previous_headings":"","what":"R","title":"Create Workflow with {tidymodels}. Fit Models with scikit-learn","text":"Install package github","code":"# install.packages(\"devtools\") devtools::install_github(\"hhp94/rpwf\", branch = \"master\")"},{"path":"https://hhp94.github.io/rpwf/index.html","id":"python","dir":"","previous_headings":"","what":"Python","title":"Create Workflow with {tidymodels}. Fit Models with scikit-learn","text":"Setup python environment conda sqlalchemy pandas pandas-downcast pyarrow scikit-learn xgboost pins pyyaml machine learning library lightgbm etc. Next, copy python codes folder rpwf_cp_py_codes(). ’m just copying codes home/opt folder. Install copied python codes local package maximum flexibility. Remember -e flag, allows modify python codes without re-installation. Remove package needed ","code":"conda create -n py39 python=3.9.13 anaconda conda activate py39 conda install pyarrow sqlalchemy xgboost pyyaml python -m pip install pandas-downcast python -m pip install pins list.files(\"~/opt\") # Coping python codes to this folder rpwf_cp_py_codes(\"~/opt\") list.files(\"~/opt\") # A folder called \"rpwf\" is created python -m pip install -e ~/opt/rpwf #   Preparing metadata (setup.py) ... done # Installing collected packages: local-rpwf #   Running setup.py develop for local-rpwf # Successfully installed local-rpwf-0.1.0 pip uninstall local-rpwf # Found existing installation: local-rpwf 0.1.0 # Uninstalling local-rpwf-0.1.0: #   Would remove: #     .../local-rpwf.egg-link # Proceed (Y/n)? Y #   Successfully uninstalled local-rpwf-0.1.0"},{"path":"https://hhp94.github.io/rpwf/index.html","id":"linux-installation","dir":"","previous_headings":"","what":"Linux installation","title":"Create Workflow with {tidymodels}. Fit Models with scikit-learn","text":"R arrow installation linux might fail. case, use instruction. following codes worked update current build arrow ","code":"Sys.setenv(NOT_CRAN = TRUE) install.packages(\"arrow\", repos = c(arrow = \"https://nightlies.apache.org/arrow/r\", getOption(\"repos\"))) source(\"https://raw.githubusercontent.com/apache/arrow/master/r/R/install-arrow.R\") install_arrow(verbose = TRUE)"},{"path":"https://hhp94.github.io/rpwf/index.html","id":"useage","dir":"","previous_headings":"","what":"Useage","title":"Create Workflow with {tidymodels}. Fit Models with scikit-learn","text":"First, create pins board database Get list available models define model(s) recipe(s) Create workflow sets export information Run workflow Python Plot results “”","code":"library(rpwf) library(pins) library(tidymodels) library(ggplot2)  board <- board_temp() # Create a temp board from the pins package tmp_dir <- withr::local_tempdir() # Temp folder db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) # Temp database rpwf_avail_models(db_con) enet_model <- linear_reg(   penalty = tune(),   mixture = tune() ) |>   set_engine(\"glmnet\") |>   set_mode(\"regression\") |>   set_py_engine(\"sklearn.linear_model\", # Set the py engine     \"ElasticNet\",     rpwf_model_tag = \"enet\"   ) |>   set_r_grid(dials::grid_regular, levels = 10) # Set the engine specific grid  svm_rbf_model <- svm_rbf(   cost = tune(),   margin = tune() ) |>   set_engine(\"kernlab\") |>   set_mode(\"regression\") |>   set_py_engine(\"sklearn.svm\", # Set the py engine     \"SVR\",     rpwf_model_tag = \"svm_rbf\",     kernel = \"rbf\"   ) |> # fix kernel parameter = \"rbf\"   set_r_grid(dials::grid_regular, levels = 10) # Set the engine specific grid  normalize_recipe <- recipe(mpg ~ ., data = mtcars) |>   step_normalize(all_predictors()) wf <- rpwf_workflow_set(   preprocs = list(normalize_recipe),   models = list(enet_model, svm_rbf_model),   costs = \"neg_root_mean_squared_error\" ) |>   rpwf_augment(db_con = db_con)  rpwf_write_grid(wf) # Write the parquets for the hyper param grids rpwf_write_df(wf) # Write the parquets for the train data rpwf_export_db(wf, db_con) # Write the information in the database # Write the board information in a YAML file rpwf_write_board_yaml(board, paste(tmp_dir, \"board.yml\", sep = \"/\")) python -m rpwf.script.nested_resampling <path to the db> -b <path to board yaml> \\   -a -c 7 -icv 5 -icr 2 -ocv 5 -ocr 2 wf_results <- rpwf_results(db_con) p <- wf_results |>   tidyr::unnest(fit_results) |>   ggplot(aes(y = neg_root_mean_squared_error, x = model_tag, color = model_tag)) +   geom_boxplot() +   geom_jitter() +   theme_bw()  p"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal R6 Object Only for Setting up Inheritance — BaseEx","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"R6 object provides common set methods 1) store metadata data db, 2) export parquet files python import. meant called manually.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"hash (character()) hash object rlang::hash(). pin_name (character()) pin_name file project folder. df (data.frame()) df hyper param grid transformed df. con (DBI::dbConnect()) DBI::dbConnect() object, generated rpwf_connect_db(). export_query (glue::glue_sql()) SQL query upload metadata data db. queried_pin_name (glue::glue_sql()) Queried pin_name object. board (character()) {pins} board object. dbname name database. seed random seed.","code":""},{"path":[]},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"BaseEx$new() BaseEx$exec_query() BaseEx$set_hash() BaseEx$set_pin_name() BaseEx$find_pin_name_in_db() BaseEx$set_export_query() BaseEx$set_df() BaseEx$export_prep() BaseEx$export_db() BaseEx$export_parquet() BaseEx$export() BaseEx$clone()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"class parent RGrid TrainDf R6 object, meant called.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$new(db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"db_con (DbCon) DbCon object, generated rpwf_connect_db().","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-exec-query-","dir":"Reference","previous_headings":"","what":"Method exec_query()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"Run query check object exists db checking hash object db. Either find one unique row row.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$exec_query(query)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"query (glue::glue_sql()) SQL query either hyper parameter grid transformed df.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-set-hash-","dir":"Reference","previous_headings":"","what":"Method set_hash()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"Pass hash object function set hash attribute.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$set_hash(val)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"val () New hash, either integer string.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-set-pin-name-","dir":"Reference","previous_headings":"","what":"Method set_pin_name()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"Change pin_name object stored. NA grid provided. provide train data.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$set_pin_name(val)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"val (character()) Path store object disk.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-find-pin-name-in-db-","dir":"Reference","previous_headings":"","what":"Method find_pin_name_in_db()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"Store results query db data.frame. Query return df (nrow() works) 0 <= nrow() < 2.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$find_pin_name_in_db(val)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"val (data.frame()) New data frame generated self$exec_query.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-set-export-query-","dir":"Reference","previous_headings":"","what":"Method set_export_query()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"Change SQL query export metadata database.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$set_export_query(val)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"val (glue::glue_sql()) New SQL query export metadata.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-set-df-","dir":"Reference","previous_headings":"","what":"Method set_df()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"hash new object found database, new data prepared. data found metadata indicated pin_name new data also prepared. Otherwise, self$df NULL skipped BaseEx::self$export_parquet() method.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$set_df(val)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"val (data.frame()) Either recipes::juice() object data.frame hyper param grid.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-export-prep-","dir":"Reference","previous_headings":"","what":"Method export_prep()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"db query found existing metadata, export pin_name made. metadata found associated data found, export pin_name also made. Else get pin_name metadata db.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$export_prep(new_pin_name, new_export_query)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"new_pin_name (character()) Path object. new_export_query (glue::glue_sql()) SQL query export obj metadata db.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-export-db-","dir":"Reference","previous_headings":"","what":"Method export_db()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"self$export_query generated metadata found database, export metadata db using query. Otherwise return NULL.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$export_db()"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-export-parquet-","dir":"Reference","previous_headings":"","what":"Method export_parquet()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"file specified self$pin_name found, export file parquet file location specified metadata.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$export_parquet()"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-export-","dir":"Reference","previous_headings":"","what":"Method export()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"Wrapper around exporting information db writing parquet file.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$export()"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"objects class cloneable method.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"","code":"BaseEx$clone(deep = FALSE)"},{"path":"https://hhp94.github.io/rpwf/reference/BaseEx.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object Only for Setting up Inheritance — BaseEx","text":"deep Whether make deep clone.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal R6 object that process the hyper param grid generated in R — RGrid","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"R6 object manage export metadata parquet file hyper param grid generated R","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"object works : inherits BaseEx class. accept hyper param grid generated rpwf_grid_gen_. calculate hash grid check hash database. hash found database: assign pin_name associated hash grid self$pin_name. check grid exists self$pin_name. exists, assign grid self$df. file exists, assign NULL self$df attribute stop self$export_parquet() executing. hash found database: assign grid self$df. generate new pin_name write grid. generate SQL query update database new hash new pin_name update database generated SQL query self$export_db() write parquet self$export_parquet()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"rpwf::BaseEx -> RGrid","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"grid_obj (character())rpwf_grid_gen_() performs necessary clean ups grid can used python","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"rpwf::BaseEx$exec_query() rpwf::BaseEx$export() rpwf::BaseEx$export_db() rpwf::BaseEx$export_parquet() rpwf::BaseEx$export_prep() rpwf::BaseEx$find_pin_name_in_db() rpwf::BaseEx$set_df() rpwf::BaseEx$set_export_query() rpwf::BaseEx$set_hash() rpwf::BaseEx$set_pin_name()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"RGrid$new() RGrid$set_attrs() RGrid$clone()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"Create new instance RGrid class. grids made functions dials::grid_latin_hypercube dials::grid_regular. See BaseEx details attributes.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"","code":"RGrid$new(grid_obj, db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"grid_obj (rpwf::rpwf_grid_gen_())rpwf_grid_gen_() performs necessary clean ups grid can used python. db_con (DbCon) DbCon object, generated rpwf_connect_db().","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"method-set-attrs-","dir":"Reference","previous_headings":"","what":"Method set_attrs()","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"Refresh attributes using current hash. Needed run updates attributes information Db","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"","code":"RGrid$set_attrs()"},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"objects class cloneable method.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"","code":"RGrid$clone(deep = FALSE)"},{"path":"https://hhp94.github.io/rpwf/reference/RGrid.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 object that process the hyper param grid generated in R — RGrid","text":"deep Whether make deep clone.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal R6 Object that Process the Data Transformation — TrainDf","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"R6 object manage export metadata parquet file transformed data defined recipe data transformation. Accept special role \"pd.index\" recipes::update_role() index pandas DataFrame. outcome provided, data.frame considered \"test\" data.frame.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"object works : inherits BaseEx class. accept recipe generate prepped object recipes::prep(). use prepped object get name pd.index, target, predictors. calculate hash prepped recipe (data frame) check hash prepped recipe database. hash found database: assign pin_name associated hash data.frame self$pin_name. check file exists self$pin_name. exists, transform prepped object recipes::juice() assign self$df. file exists, assign NULL self$df attribute stop self$export_parquet() executing. hash found database: transform prepped object recipes::juice() assign self$df. generate new pin_name write transformed data. generate SQL query update database new hash new pin_name update database generated SQL query self$export_db() write parquet self$export_parquet()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"rpwf::BaseEx -> TrainDf","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"prepped (recipes::prep()) holds prepped object. term_info (tibble::tibble()) self$prepped object attribute term_info information transformed variable actually transforming data. idx_col (character()) pre-defined index R makes working pandas.DataFrame less error prone. Defined provided recipe. target (character()) Name target variable. missing, message returned say test df assumed generated. Defined provided recipe. predictors (character()) List names predictors. Stored JSON string parsed python python list.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"rpwf::BaseEx$exec_query() rpwf::BaseEx$export() rpwf::BaseEx$export_db() rpwf::BaseEx$export_parquet() rpwf::BaseEx$export_prep() rpwf::BaseEx$find_pin_name_in_db() rpwf::BaseEx$set_df() rpwf::BaseEx$set_export_query() rpwf::BaseEx$set_hash() rpwf::BaseEx$set_pin_name()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"TrainDf$new() TrainDf$set_attrs() TrainDf$set_idx_col() TrainDf$set_target_col() TrainDf$set_predictors() TrainDf$clone()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"Create new instance TrainDf class. Accept special role \"pd.index\" recipes::update_role() index pandas DataFrame. outcome provided, data.frame considered \"test\" data.frame. See ?rprw::BaseEx details attributes methods.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"","code":"TrainDf$new(recipe, db_con, seed = sample(1:1e+05, size = 1))"},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"recipe (recipes::recipe()) provided recipe defines data transformed. db_con (DbCon) DbCon object, generated rpwf_connect_db(). seed (numeric()) Random seed control recipe prep level","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"method-set-attrs-","dir":"Reference","previous_headings":"","what":"Method set_attrs()","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"Refresh attributes using current hash. Needed run updates attributes information Db","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"","code":"TrainDf$set_attrs()"},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"method-set-idx-col-","dir":"Reference","previous_headings":"","what":"Method set_idx_col()","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"Set index column defined recipe.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"","code":"TrainDf$set_idx_col()"},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"method-set-target-col-","dir":"Reference","previous_headings":"","what":"Method set_target_col()","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"Set target column defined recipe. Assume test data target found.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"","code":"TrainDf$set_target_col()"},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"method-set-predictors-","dir":"Reference","previous_headings":"","what":"Method set_predictors()","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"Store list predictors defined recipe json string parsed python.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"","code":"TrainDf$set_predictors()"},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"objects class cloneable method.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"","code":"TrainDf$clone(deep = FALSE)"},{"path":"https://hhp94.github.io/rpwf/reference/TrainDf.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal R6 Object that Process the Data Transformation — TrainDf","text":"deep Whether make deep clone.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_py_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scikit-learn Model Definitions to Database — rpwf_add_py_model","title":"Add scikit-learn Model Definitions to Database — rpwf_add_py_model","text":"function adds updates scikit-learn model database. Use module (.e., \"xgboost\"), base learner (.e., \"XGBClassifier\"), corresponding {parsnip} engine (.e., \"xgboost\"), equivalent hyper parameter names (.e., \"mtry\" {parsnip} \"colsample_bytree\"), model mode (.e., \"classification\").","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_py_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scikit-learn Model Definitions to Database — rpwf_add_py_model","text":"","code":"rpwf_add_py_model(   db_con,   py_module,   py_base_learner,   r_engine,   hyper_par_rename,   model_mode )"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_py_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scikit-learn Model Definitions to Database — rpwf_add_py_model","text":"db_con rpwf_connect_db() object. py_module module scikit-learn, .e., \"sklearn.ensemble\". py_base_learner base learner scikit-learn, .e., \"RandomForestClassifier\". r_engine engine parsnip, .e., \"ranger\" \"rpart\". hyper_par_rename named list equivalent hyper parameters, .e., list(cost_complexity = \"ccp_alpha\"). model_mode \"classification\" \"regression\".","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_py_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add scikit-learn Model Definitions to Database — rpwf_add_py_model","text":"","code":"# Generate dummy database board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) DBI::dbListTables(db_con$con) #> [1] \"df_tbl\"           \"model_type_tbl\"   \"r_grid_tbl\"       \"wflow_result_tbl\" #> [5] \"wflow_tbl\"        DBI::dbGetQuery(db_con$con, \"SELECT * FROM model_type_tbl\") # before adding #>   model_type_id            py_module    py_base_learner r_engine #> 1             1 sklearn.linear_model LogisticRegression   glmnet #> 2             2 sklearn.linear_model         ElasticNet   glmnet #> 3             3          sklearn.svm                SVC  kernlab #> 4             4          sklearn.svm                SVR  kernlab #> 5             5              xgboost      XGBClassifier  xgboost #>                                                                                                                                                                                       hyper_par_rename #> 1                                                                                                                                                             {\"penalty\":[\"C\"],\"mixture\":[\"l1_ratio\"]} #> 2                                                                                                                                                         {\"penalty\":[\"alpha\"],\"mixture\":[\"l1_ratio\"]} #> 3                                                                                          {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"]} #> 4                                                                     {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"],\"margin\":[\"epsilon\"]} #> 5 {\"mtry\":[\"colsample_bytree\"],\"trees\":[\"n_estimators\"],\"min_n\":[\"min_child_weight\"],\"tree_depth\":[\"max_depth\"],\"learn_rate\":[\"learning_rate\"],\"loss_reduction\":[\"gamma\"],\"sample_size\":[\"subsample\"]} #>       model_mode #> 1 classification #> 2     regression #> 3 classification #> 4     regression #> 5 classification rpwf_add_py_model(   db_con,   \"sklearn.ensemble\",   \"RandomForestClassifier\",   \"rpart\",   list(     cost_complexity = \"ccp_alpha\",     tree_depth = \"max_depth\",     min_n = \"min_samples_split\"   ),   \"classification\" ) #> [1] 1 DBI::dbGetQuery(db_con$con, \"SELECT * FROM model_type_tbl\") # after adding #>   model_type_id            py_module        py_base_learner r_engine #> 1             1 sklearn.linear_model     LogisticRegression   glmnet #> 2             2 sklearn.linear_model             ElasticNet   glmnet #> 3             3          sklearn.svm                    SVC  kernlab #> 4             4          sklearn.svm                    SVR  kernlab #> 5             5              xgboost          XGBClassifier  xgboost #> 6             6     sklearn.ensemble RandomForestClassifier    rpart #>                                                                                                                                                                                       hyper_par_rename #> 1                                                                                                                                                             {\"penalty\":[\"C\"],\"mixture\":[\"l1_ratio\"]} #> 2                                                                                                                                                         {\"penalty\":[\"alpha\"],\"mixture\":[\"l1_ratio\"]} #> 3                                                                                          {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"]} #> 4                                                                     {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"],\"margin\":[\"epsilon\"]} #> 5 {\"mtry\":[\"colsample_bytree\"],\"trees\":[\"n_estimators\"],\"min_n\":[\"min_child_weight\"],\"tree_depth\":[\"max_depth\"],\"learn_rate\":[\"learning_rate\"],\"loss_reduction\":[\"gamma\"],\"sample_size\":[\"subsample\"]} #> 6                                                                                                           {\"cost_complexity\":[\"ccp_alpha\"],\"tree_depth\":[\"max_depth\"],\"min_n\":[\"min_samples_split\"]} #>       model_mode #> 1 classification #> 2     regression #> 3 classification #> 4     regression #> 5 classification #> 6 classification"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_random_state_.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the Random State Seeds for Python random_state — rpwf_add_random_state_","title":"Add the Random State Seeds for Python random_state — rpwf_add_random_state_","text":"Add Random State Seeds Python random_state","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_random_state_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the Random State Seeds for Python random_state — rpwf_add_random_state_","text":"","code":"rpwf_add_random_state_(obj, range, seed)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_random_state_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the Random State Seeds for Python random_state — rpwf_add_random_state_","text":"obj object generated rpwf_add_model_param_(). range range seed sample . seed random seed sample random_state.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_add_random_state_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the Random State Seeds for Python random_state — rpwf_add_random_state_","text":"tibble \"random_state\" column added.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_augment.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 Function for rpwf_workflow_set and rpwf_data_set — rpwf_augment","title":"Generic S3 Function for rpwf_workflow_set and rpwf_data_set — rpwf_augment","text":"Generic S3 Function rpwf_workflow_set rpwf_data_set","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 Function for rpwf_workflow_set and rpwf_data_set — rpwf_augment","text":"","code":"rpwf_augment(obj, ...)  # S3 method for rpwf_workflow_set rpwf_augment(   obj,   db_con,   grid_fun = NULL,   ...,   range = c(1L, 5000L),   seed = 1234L )"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 Function for rpwf_workflow_set and rpwf_data_set — rpwf_augment","text":"obj rpwf_workflow_set rpwf_data_set object. ... additional arguments grid_fun functions. db_con rpwf_connect_db() object. grid_fun dials::grid_<functions>, e.g., dials::grid_random(), dials::grid_latin_hypercube(). Default NULL assumes grid search performed sklearn defaults used. range range seed sample . seed random seed.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 Function for rpwf_workflow_set and rpwf_data_set — rpwf_augment","text":"data frame necessary columns export database.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic S3 Function for rpwf_workflow_set and rpwf_data_set — rpwf_augment","text":"","code":"# Create the database board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board)  # Create a `workflow_set` d <- mtcars d$id <- seq_len(nrow(d)) m1 <- parsnip::boost_tree() |>   parsnip::set_engine(\"xgboost\") |>   parsnip::set_mode(\"classification\") |>   set_py_engine(py_module = \"xgboost\", py_base_learner = \"XGBClassifier\") r1 <- d |>   recipes::recipe(vs ~ .) |>   # \"pd.index\" is the special column that used for indexing in pandas   recipes::update_role(id, new_role = \"pd.index\") wf <- rpwf_workflow_set(list(r1), list(m1), \"neg_log_loss\")  to_export <- wf |>   rpwf_augment(db_con, dials::grid_latin_hypercube, size = 10) #> No hyper param tuning specified #> Adding id as pandas idx print(to_export) #> # A tibble: 1 × 11 #>   preprocs models    costs py_ba…¹ model…² recip…³ model…⁴ rando…⁵ grids Rgrid   #>   <list>   <list>    <chr> <chr>   <chr>   <chr>     <int>   <int> <lis> <list>  #> 1 <recipe> <spec[+]> neg_… NA      XGBCla… NA            5    1004 <lgl> <RGrid> #> # … with 1 more variable: TrainDf <list>, and abbreviated variable names #> #   ¹​py_base_learner_args, ²​model_tag, ³​recipe_tag, ⁴​model_type_id, #> #   ⁵​random_state"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_avail_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Available Models — rpwf_avail_models","title":"Show Available Models — rpwf_avail_models","text":"Models pre-defined added database. models already added. models can added rpwf_add_py_model(). functions shows models currently database.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_avail_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Available Models — rpwf_avail_models","text":"","code":"rpwf_avail_models(db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_avail_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Available Models — rpwf_avail_models","text":"db_con rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_avail_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Available Models — rpwf_avail_models","text":"data.frame models available database.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_avail_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show Available Models — rpwf_avail_models","text":"","code":"board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) rpwf_avail_models(db_con) #>              py_module        py_base_learner r_engine     model_mode #> 1 sklearn.linear_model     LogisticRegression   glmnet classification #> 2 sklearn.linear_model             ElasticNet   glmnet     regression #> 3          sklearn.svm                    SVC  kernlab classification #> 4          sklearn.svm                    SVR  kernlab     regression #> 5              xgboost          XGBClassifier  xgboost classification #> 6     sklearn.ensemble RandomForestClassifier    rpart classification"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_connect_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Database and Return an Object that Stores the Connection — rpwf_connect_db","title":"Create a Database and Return an Object that Stores the Connection — rpwf_connect_db","text":"Create connect SQLite db. Access connection object$con.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_connect_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Database and Return an Object that Stores the Connection — rpwf_connect_db","text":"","code":"rpwf_connect_db(dbname, board, ...)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_connect_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Database and Return an Object that Stores the Connection — rpwf_connect_db","text":"dbname path database, passed RSQLite::SQLite(). board {pins} board object. ... arguments passed DBI::dbConnect()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_connect_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Database and Return an Object that Stores the Connection — rpwf_connect_db","text":"new rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_connect_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Database and Return an Object that Stores the Connection — rpwf_connect_db","text":"","code":"board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) db_con$con #> <SQLiteConnection> #>   Path: /tmp/RtmpOyfo0j/db.SQLite #>   Extensions: TRUE db_con$board #> Pin board <pins_board_folder> #> Path: '/tmp/RtmpOyfo0j/pins-244753608975' #> Cache size: 0"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_cp_py_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy sklearn Codes to Path — rpwf_cp_py_codes","title":"Copy sklearn Codes to Path — rpwf_cp_py_codes","text":"python codes needed work database. copying codes rpwf_cp_py_codes(), navigate \"rpwf\" folder run python -m pip install -e . install codes local python package. Remove python codes pip uninstall local-rpwf.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_cp_py_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy sklearn Codes to Path — rpwf_cp_py_codes","text":"","code":"rpwf_cp_py_codes(board, overwrite = FALSE)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_cp_py_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy sklearn Codes to Path — rpwf_cp_py_codes","text":"board {pins} board object. overwrite overwriting copied python codes . Default FALSE.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_cp_py_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy sklearn Codes to Path — rpwf_cp_py_codes","text":"newly copied folder called \"rpwf\" provided project path.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_cp_py_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy sklearn Codes to Path — rpwf_cp_py_codes","text":"","code":"tmp_dir <- tempdir() rpwf_cp_py_codes(tmp_dir) #> creating folder 'rpwf' under provided root path #> [1] TRUE list.files(paste0(tmp_dir, \"/rpwf\"), recursive = TRUE) #> [1] \"rpwf/__init__.py\"                 \"rpwf/database.py\"                 #> [3] \"rpwf/rpwf.py\"                     \"rpwf/script/__init__.py\"          #> [5] \"rpwf/script/cross_validation.py\"  \"rpwf/script/nested_resampling.py\" #> [7] \"setup.cfg\"                        \"setup.py\""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_data_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Juice data from a Recipe — rpwf_data_set","title":"Juice data from a Recipe — rpwf_data_set","text":"Create object holds juiced prepped data exported Python.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_data_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Juice data from a Recipe — rpwf_data_set","text":"","code":"rpwf_data_set(..., db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_data_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Juice data from a Recipe — rpwf_data_set","text":"... recipes::recipe() objects db_con rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_data_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Juice data from a Recipe — rpwf_data_set","text":"rpwf_data_set object","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_data_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Juice data from a Recipe — rpwf_data_set","text":"","code":"board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board)  r <- recipes::recipe(mpg ~ ., data = mtcars) d <- rpwf_data_set(r, db_con = db_con) #> No pandas idx added. Use update_roles() with 'pd.index' for one d #> # A tibble: 1 × 5 #>   preprocs recipe_tag grids Rgrid   TrainDf   #> * <list>   <chr>      <lgl> <list>  <list>    #> 1 <recipe> NA         NA    <RGrid> <TrainDf>"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes Rows from Tables Other than wflow_tbl — rpwf_db_del_entry","title":"Deletes Rows from Tables Other than wflow_tbl — rpwf_db_del_entry","text":"deletion workflows wflow_tbl specified separately avoid mistakes.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes Rows from Tables Other than wflow_tbl — rpwf_db_del_entry","text":"","code":"rpwf_db_del_entry(tbls, id, db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes Rows from Tables Other than wflow_tbl — rpwf_db_del_entry","text":"tbls vector character table names, .e., \"df_tbl\", \"model_type_tbl\", \"r_grid_tbl\", \"r_grid_tbl\", \"wflow_result_tbl\". id vector ids deleted particular table. db_con rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes Rows from Tables Other than wflow_tbl — rpwf_db_del_entry","text":"Called side effect.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_entry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deletes Rows from Tables Other than wflow_tbl — rpwf_db_del_entry","text":"","code":"board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) # Before deleting DBI::dbGetQuery(db_con$con, \"SELECT * FROM model_type_tbl;\") #>   model_type_id            py_module        py_base_learner r_engine #> 1             1 sklearn.linear_model     LogisticRegression   glmnet #> 2             2 sklearn.linear_model             ElasticNet   glmnet #> 3             3          sklearn.svm                    SVC  kernlab #> 4             4          sklearn.svm                    SVR  kernlab #> 5             5              xgboost          XGBClassifier  xgboost #> 6             6     sklearn.ensemble RandomForestClassifier    rpart #>                                                                                                                                                                                       hyper_par_rename #> 1                                                                                                                                                             {\"penalty\":[\"C\"],\"mixture\":[\"l1_ratio\"]} #> 2                                                                                                                                                         {\"penalty\":[\"alpha\"],\"mixture\":[\"l1_ratio\"]} #> 3                                                                                          {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"]} #> 4                                                                     {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"],\"margin\":[\"epsilon\"]} #> 5 {\"mtry\":[\"colsample_bytree\"],\"trees\":[\"n_estimators\"],\"min_n\":[\"min_child_weight\"],\"tree_depth\":[\"max_depth\"],\"learn_rate\":[\"learning_rate\"],\"loss_reduction\":[\"gamma\"],\"sample_size\":[\"subsample\"]} #> 6                                                                                                           {\"cost_complexity\":[\"ccp_alpha\"],\"tree_depth\":[\"max_depth\"],\"min_n\":[\"min_samples_split\"]} #>       model_mode #> 1 classification #> 2     regression #> 3 classification #> 4     regression #> 5 classification #> 6 classification rpwf_db_del_entry(\"model_type_tbl\", 1, db_con) # After deleting DBI::dbGetQuery(db_con$con, \"SELECT * FROM model_type_tbl;\") #>   model_type_id            py_module        py_base_learner r_engine #> 1             2 sklearn.linear_model             ElasticNet   glmnet #> 2             3          sklearn.svm                    SVC  kernlab #> 3             4          sklearn.svm                    SVR  kernlab #> 4             5              xgboost          XGBClassifier  xgboost #> 5             6     sklearn.ensemble RandomForestClassifier    rpart #>                                                                                                                                                                                       hyper_par_rename #> 1                                                                                                                                                         {\"penalty\":[\"alpha\"],\"mixture\":[\"l1_ratio\"]} #> 2                                                                                          {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"]} #> 3                                                                     {\"cost\":[\"C\"],\"degree\":[\"degree\"],\"scale_factor\":[\"gamma\"],\"rbf_sigma\":[\"gamma\"],\"kernel_offset\":[\"coef0\"],\"margin\":[\"epsilon\"]} #> 4 {\"mtry\":[\"colsample_bytree\"],\"trees\":[\"n_estimators\"],\"min_n\":[\"min_child_weight\"],\"tree_depth\":[\"max_depth\"],\"learn_rate\":[\"learning_rate\"],\"loss_reduction\":[\"gamma\"],\"sample_size\":[\"subsample\"]} #> 5                                                                                                           {\"cost_complexity\":[\"ccp_alpha\"],\"tree_depth\":[\"max_depth\"],\"min_n\":[\"min_samples_split\"]} #>       model_mode #> 1     regression #> 2 classification #> 3     regression #> 4 classification #> 5 classification"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_wflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Exported Workflows — rpwf_db_del_wflow","title":"Delete Exported Workflows — rpwf_db_del_wflow","text":"function specifically deletes workflows wflow_tbl.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_wflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Exported Workflows — rpwf_db_del_wflow","text":"","code":"rpwf_db_del_wflow(id, db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_wflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Exported Workflows — rpwf_db_del_wflow","text":"id numeric vector workflow ids removed. db_con rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_wflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete Exported Workflows — rpwf_db_del_wflow","text":"Called side effect.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_db_del_wflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Exported Workflows — rpwf_db_del_wflow","text":"","code":"# Delete workflows with id from 1 to 99 of the database defined by `con` board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) rpwf_db_del_wflow(1:99, db_con) #> [1] 0"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a {dm} Object of the Database — rpwf_dm","title":"Generate a {dm} Object of the Database — rpwf_dm","text":"Working {dm} object can make life easier writing manual queries. Also allows visualization database dm_draw().","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a {dm} Object of the Database — rpwf_dm","text":"","code":"rpwf_dm(db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a {dm} Object of the Database — rpwf_dm","text":"db_con rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a {dm} Object of the Database — rpwf_dm","text":"{dm} object created schema.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a {dm} Object of the Database — rpwf_dm","text":"","code":"board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board) dm_obj <- rpwf_dm(db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_export_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic S3 Function for rpwf_augment() Object into the Database — rpwf_export_db","title":"Generic S3 Function for rpwf_augment() Object into the Database — rpwf_export_db","text":"Generic S3 Function rpwf_augment() Object Database","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_export_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic S3 Function for rpwf_augment() Object into the Database — rpwf_export_db","text":"","code":"rpwf_export_db(obj, db_con)  # S3 method for rpwf_workflow_set rpwf_export_db(obj, db_con)  # S3 method for rpwf_data_set rpwf_export_db(obj, db_con)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_export_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic S3 Function for rpwf_augment() Object into the Database — rpwf_export_db","text":"obj augmented rpwf_workflow_set() rpwf_data_set() object. db_con rpwf_connect_db() object.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_export_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic S3 Function for rpwf_augment() Object into the Database — rpwf_export_db","text":"number rows exported.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_export_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic S3 Function for rpwf_augment() Object into the Database — rpwf_export_db","text":"","code":"# Create the database board <- pins::board_temp() tmp_dir <- tempdir() db_con <- rpwf_connect_db(paste(tmp_dir, \"db.SQLite\", sep = \"/\"), board)  # Create a `workflow_set` d <- mtcars d$target <- stats::rbinom(nrow(d), 1, 0.5) m1 <- parsnip::boost_tree() |>   parsnip::set_engine(\"xgboost\") |>   parsnip::set_mode(\"classification\") |>   set_py_engine(\"xgboost\", \"XGBClassifier\", \"my_xgboost_model\") r1 <- d |>   recipes::recipe(target ~ .) wf <- rpwf_workflow_set(list(r1), list(m1), \"neg_log_loss\")  to_export <- wf |>   rpwf_augment(db_con, dials::grid_latin_hypercube, size = 10) #> No hyper param tuning specified #> No pandas idx added. Use update_roles() with 'pd.index' for one rpwf_write_grid(to_export) #> No grid generated rpwf_write_df(to_export) #> Creating new version '20221123T020422Z-a8d18' #> Writing to pin 'df.0dda107e15c6150535a8d13a54848e37.parquet'  # Before exporting DBI::dbGetQuery(db_con$con, \"SELECT * FROM wflow_tbl;\") #> [1] wflow_id             model_tag            recipe_tag           #> [4] costs                model_type_id        py_base_learner_args #> [7] grid_id              df_id                random_state         #> <0 rows> (or 0-length row.names) # After exporting rpwf_export_db(to_export, db_con) #> Exporting workflows to db... #> [1] 1 DBI::dbGetQuery(db_con$con, \"SELECT * FROM wflow_tbl;\") #>   wflow_id        model_tag recipe_tag        costs model_type_id #> 1        1 my_xgboost_model       <NA> neg_log_loss             5 #>   py_base_learner_args grid_id df_id random_state #> 1                 <NA>       1     1         1004"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_grid_gen_.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper around dials::grid_<functions> to create a sklearn suitable grid — rpwf_grid_gen_","title":"A wrapper around dials::grid_<functions> to create a sklearn suitable grid — rpwf_grid_gen_","text":"function takes whatever grid functions available {dials}, converts sklearn suitable format renaming hyper parameters well adding fixed parameters overwrite default values sklearn provided perform cleaning converting R mtry counts Python col_by_sample proportion.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_grid_gen_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper around dials::grid_<functions> to create a sklearn suitable grid — rpwf_grid_gen_","text":"","code":"rpwf_grid_gen_(   model,   preproc,   rename_fun,   grid_fun = NULL,   update_params = NULL,   ... )"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_grid_gen_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper around dials::grid_<functions> to create a sklearn suitable grid — rpwf_grid_gen_","text":"model model spec object defined {parsnip}. preproc recipe object defined {recipes}. rename_fun function rename grid, generated rpwf_grid_rename_() grid_fun dials::grid_<functions>, e.g., dials::grid_random(), dials::grid_latin_hypercube(). Default NULL assumes grid search performed sklearn defaults used. ... additional arguments grid_fun functions.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_grid_gen_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper around dials::grid_<functions> to create a sklearn suitable grid — rpwf_grid_gen_","text":"rpwf_grid object, just modified {dials} grid made suitable sklearn.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Results from Finished workflows — rpwf_results","title":"Get Results from Finished workflows — rpwf_results","text":"Wrapper inner join wflow_tbl wflow_result_tbl invoke utils::read.csv() read results.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Results from Finished workflows — rpwf_results","text":"","code":"rpwf_results(db_con, import_csv = TRUE)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Results from Finished workflows — rpwf_results","text":"db_con rpwf_connect_db() object. import_csv whether read results workflow.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Results from Finished workflows — rpwf_results","text":"tibble results stored fit_results column","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"The db Schema — rpwf_schema","title":"The db Schema — rpwf_schema","text":"Wrapper around SQL queries holds table definitions.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The db Schema — rpwf_schema","text":"","code":"rpwf_schema()"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The db Schema — rpwf_schema","text":"named list containing SQL query strings defining table.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The db Schema — rpwf_schema","text":"tables available database. Print raw SQL code rpwf_schema()$<table name> see constraints variable names. model_type_tbl: defines comparable models R python. df_tbl: holds transformed data (train test) pass python. r_grid_tbl: holds hyper param grids created R. wflow_tbl: defines params needed run ML model sklearn. wflow_result_tbl: holds results workflow ran python.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The db Schema — rpwf_schema","text":"","code":"definitions <- rpwf_schema() names(definitions) #> [1] \"model_type_tbl\"   \"r_grid_tbl\"       \"df_tbl\"           \"wflow_tbl\"        #> [5] \"wflow_result_tbl\""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_tag_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Tag to a Recipe — rpwf_tag_recipe","title":"Add a Tag to a Recipe — rpwf_tag_recipe","text":"Complicated workflow sets can become difficult track. Add tag keep track unique recipes.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_tag_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Tag to a Recipe — rpwf_tag_recipe","text":"","code":"rpwf_tag_recipe(obj, tag)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_tag_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Tag to a Recipe — rpwf_tag_recipe","text":"obj recipes::recipe() object. tag Short string description recipe.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_tag_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Tag to a Recipe — rpwf_tag_recipe","text":"tagged recipes::recipe() object. Accessible obj$recipe_tag.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_tag_recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Tag to a Recipe — rpwf_tag_recipe","text":"","code":"r <- recipes::recipe(~., data = mtcars) r <- rpwf_tag_recipe(r, \"test recipe\") r$recipe_tag #> [1] \"test recipe\""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_workflow_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Customized Version of {workflowsets} — rpwf_workflow_set","title":"Customized Version of {workflowsets} — rpwf_workflow_set","text":"Wrapper around tidyr::crossing() creates combinations recipes models.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_workflow_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customized Version of {workflowsets} — rpwf_workflow_set","text":"","code":"rpwf_workflow_set(preprocs, models, costs)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_workflow_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customized Version of {workflowsets} — rpwf_workflow_set","text":"preprocs list vector recipes::recipe(). models list vector model spec. Generated adding set_py_engine() model, e.g. parsnip::boost_tree() parsnip::set_engine(). costs list vector sklearn cost optimization metrics \"neg_log_loss\" \"roc_auc\". Check docs available values.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_workflow_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customized Version of {workflowsets} — rpwf_workflow_set","text":"tibble contains combination list recipes, models, costs.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_workflow_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customized Version of {workflowsets} — rpwf_workflow_set","text":"","code":"d <- mtcars d$id <- seq_len(nrow(d)) m1 <- parsnip::boost_tree() |>   parsnip::set_engine(\"xgboost\") |>   parsnip::set_mode(\"classification\") |>   set_py_engine(py_module = \"xgboost\", py_base_learner = \"XGBClassifier\") r1 <- d |>   recipes::recipe(vs ~ .) |>   # \"pd.index\" is the special column that used for indexing in pandas   recipes::update_role(id, new_role = \"pd.index\") wf <- rpwf_workflow_set(list(r1), list(m1), \"neg_log_loss\") wf #> # A tibble: 1 × 3 #>   preprocs models    costs        #> * <list>   <list>    <chr>        #> 1 <recipe> <spec[+]> neg_log_loss"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_board_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the Board Information as a YAML File — rpwf_write_board_yaml","title":"Write the Board Information as a YAML File — rpwf_write_board_yaml","text":"board information needed input pre-made sklearn CLI.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_board_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the Board Information as a YAML File — rpwf_write_board_yaml","text":"","code":"rpwf_write_board_yaml(board, file)  # S3 method for pins_board_folder rpwf_write_board_yaml(board, file)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_board_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the Board Information as a YAML File — rpwf_write_board_yaml","text":"board pins::board object. file path export YAML file.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_board_yaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the Board Information as a YAML File — rpwf_write_board_yaml","text":"named list YAML","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_board_yaml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write the Board Information as a YAML File — rpwf_write_board_yaml","text":"","code":"board <- pins::board_temp() tmp_dir <- tempdir() rpwf_write_board_yaml(board, paste(tmp_dir, \"board.yml\", sep = \"/\")) list.files(tmp_dir) #>  [1] \"board.yml\"                                                                                             #>  [2] \"bslib-94c320ae0a749b65fd01f4f0dd9063d2\"                                                                #>  [3] \"db.SQLite\"                                                                                             #>  [4] \"downlit\"                                                                                               #>  [5] \"file24471653f477\"                                                                                      #>  [6] \"file24471a71fe3e\"                                                                                      #>  [7] \"file24471f50a9ad\"                                                                                      #>  [8] \"file244734364d6b\"                                                                                      #>  [9] \"file244738119c06\"                                                                                      #> [10] \"file244740dfa321\"                                                                                      #> [11] \"file244751146b9e\"                                                                                      #> [12] \"file2447512eb567\"                                                                                      #> [13] \"file24477109c82b\"                                                                                      #> [14] \"file24477188dfff\"                                                                                      #> [15] \"file2447a2e2efe\"                                                                                       #> [16] \"pins-244731842041\"                                                                                     #> [17] \"pins-244731cadab4\"                                                                                     #> [18] \"pins-244753608975\"                                                                                     #> [19] \"pins-24475551c64b\"                                                                                     #> [20] \"pins-244768e0f4a2\"                                                                                     #> [21] \"pins-24476b1ef5dc\"                                                                                     #> [22] \"pins-244773a6ee7e\"                                                                                     #> [23] \"pins-244773d25a4a\"                                                                                     #> [24] \"pins-2447beb7b54\"                                                                                      #> [25] \"pins-2447d137ea9\"                                                                                      #> [26] \"repos_https%3A%2F%2Fpackagemanager.rstudio.com%2Fall%2F__linux__%2Fjammy%2Flatest%2Fsrc%2Fcontrib.rds\" #> [27] \"rpwf\""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the Train/Test Data — rpwf_write_df","title":"Write the Train/Test Data — rpwf_write_df","text":"Write Train/Test Data","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the Train/Test Data — rpwf_write_df","text":"","code":"rpwf_write_df(obj)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the Train/Test Data — rpwf_write_df","text":"obj obj generated rpwf_augment().","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the Train/Test Data — rpwf_write_df","text":"Parquet files.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write the Train/Test Data — rpwf_write_df","text":"recipe, initialize new TrainDf, call self$export(), return object. make sure object called twice just fetch result previous call.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the Hyper Param Grid Parquet File — rpwf_write_grid","title":"Write the Hyper Param Grid Parquet File — rpwf_write_grid","text":"Write Hyper Param Grid Parquet File","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the Hyper Param Grid Parquet File — rpwf_write_grid","text":"","code":"rpwf_write_grid(obj)"},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the Hyper Param Grid Parquet File — rpwf_write_grid","text":"obj obj generated rpwf_augment().","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write the Hyper Param Grid Parquet File — rpwf_write_grid","text":"Parquet files.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/rpwf_write_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write the Hyper Param Grid Parquet File — rpwf_write_grid","text":"grid, initialize new RGrid, call self$export(), return object. make sure object called twice just fetch result previous call. Hence, run parallel. point, made sure 1) db updated, 2) file exported, 3) file exists. Use hashes getting grid id.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_py_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the Python Learner — set_py_engine","title":"Define the Python Learner — set_py_engine","text":"Augment model spec object generated {parsnip} information needed run sklearn models. Importantly, also passes sklearn base learner specific arguments ... parameter.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_py_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the Python Learner — set_py_engine","text":"","code":"set_py_engine(obj, py_module, py_base_learner, rpwf_model_tag = NULL, ...)"},{"path":"https://hhp94.github.io/rpwf/reference/set_py_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the Python Learner — set_py_engine","text":"obj model spec object generated parsnip::set_engine() parsnip::set_mode(). py_module character value select python module base learner comes (.e., xgboost, sklearn.ensemble, etc.). py_base_learner character value select python base learner, (.e., XGBClassifier, DecisionTreeClassifier, etc.). rpwf_model_tag string name model. Useful keeping track different combinations models. ... arguments passed python base learner via named list. Boolean must R format, .e., TRUE, FALSE.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_py_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the Python Learner — set_py_engine","text":"model spec object additional attributes self$rpwf_model_tag, self$py_base_learner self$py_base_learner_args.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_py_engine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the Python Learner — set_py_engine","text":"","code":"m <- parsnip::boost_tree() |>   parsnip::set_engine(\"xgboost\") |>   parsnip::set_mode(\"classification\") |>   set_py_engine(     \"xgboost\",     \"XGBClassifier\",     \"my_xgboost_model\",     eval_metric = \"logloss\",     use_label_encoder = FALSE,     verbosity = 0,     silent = TRUE,     n_estimators = 100 # Fix the `n_estimators` at 100   )"},{"path":"https://hhp94.github.io/rpwf/reference/set_r_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Tune Grid Specific to the Provided Model Spec — set_r_grid","title":"Create a Tune Grid Specific to the Provided Model Spec — set_r_grid","text":"hyper parameter grid can either provided function later rpwf_augment()","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_r_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Tune Grid Specific to the Provided Model Spec — set_r_grid","text":"","code":"set_r_grid(obj, grid_fun, hyper_par_fun = NULL, ...)"},{"path":"https://hhp94.github.io/rpwf/reference/set_r_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Tune Grid Specific to the Provided Model Spec — set_r_grid","text":"obj model spec object generated parsnip::set_engine() parsnip::set_mode(). grid_fun dials::grid_<functions>, e.g., grid_random(), grid_latin_hypercube(). hyper_par_fun update dials functions dials::penalty() dials::cost() named list. See examples. ... arguments pass grid_fun.","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_r_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Tune Grid Specific to the Provided Model Spec — set_r_grid","text":"Add {dials} function associated arguments model spec","code":""},{"path":"https://hhp94.github.io/rpwf/reference/set_r_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Tune Grid Specific to the Provided Model Spec — set_r_grid","text":"","code":"m <- parsnip::boost_tree() |>   parsnip::set_engine(\"xgboost\") |>   parsnip::set_mode(\"classification\") |>   set_r_grid(dials::grid_random, list(trees = dials::trees(range = c(2, 3))), size = 5) m$grid_fun #> function (x, ..., size = 5, original = TRUE, filter = NULL)  #> { #>     dots <- list(...) #>     if (any(names(dots) == \"levels\")) { #>         rlang::warn(\"`levels` is not an argument to `grid_random()`. Did you mean `size`?\") #>     } #>     UseMethod(\"grid_random\") #> } #> <bytecode: 0x557002c8a058> #> <environment: namespace:dials> m$grid_fun_args #> $size #> [1] 5 #>"},{"path":"https://hhp94.github.io/rpwf/news/index.html","id":"rpwf-021","dir":"Changelog","previous_headings":"","what":"rpwf 0.2.1","title":"rpwf 0.2.1","text":"Updated vignette","code":""},{"path":"https://hhp94.github.io/rpwf/news/index.html","id":"rpwf-020","dir":"Changelog","previous_headings":"","what":"rpwf 0.2.0","title":"rpwf 0.2.0","text":"Added pkgdown site. Fixed python codes regarding regression.","code":""},{"path":"https://hhp94.github.io/rpwf/news/index.html","id":"rpwf-010","dir":"Changelog","previous_headings":"","what":"rpwf 0.1.0","title":"rpwf 0.1.0","text":"Added NEWS.md file track changes package. Initial Release","code":""}]
