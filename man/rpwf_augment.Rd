% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00_s3_constructors_and_generics.R,
%   R/05_rpwf_workflow_export.R
\name{rpwf_augment}
\alias{rpwf_augment}
\alias{rpwf_augment.rpwf_workflow_set}
\title{Generic S3 Function for \code{rpwf_workflow_set} and \code{rpwf_data_set}}
\usage{
rpwf_augment(obj, ...)

\method{rpwf_augment}{rpwf_workflow_set}(
  obj,
  db_con,
  .grid_fun = NULL,
  ...,
  range = c(1L, 5000L),
  seed = 1234L
)
}
\arguments{
\item{obj}{a \code{rpwf_workflow_set} or \code{rpwf_data_set} object.}

\item{...}{additional arguments for the \code{.grid_fun} functions.}

\item{db_con}{(\code{DBI::dbConnect()})\cr
An \code{\link[=rpwf_connect_db]{rpwf_connect_db()}} object.}

\item{.grid_fun}{a \verb{dials::grid_<functions>}, e.g., \code{grid_random()},
\code{grid_latin_hypercube()}. Default \code{NULL} assumes that no grid search is
performed and default params in sklearn are used. See details for custom grids.}

\item{range}{range of seed to sample from.}

\item{seed}{random seed.}
}
\value{
A data frame with necessary columns for export into the database.
}
\description{
Generic S3 Function for \code{rpwf_workflow_set} and \code{rpwf_data_set}
}
\examples{
# Create the database
board <- pins::board_temp()
tmp_dir <- withr::local_tempdir()
db_con <- rpwf_connect_db(paste(tmp_dir, "db.SQLite", sep = "/"), board)

# Create a `workflow_set`
d <- mtcars
d$id <- seq_len(nrow(d))
m1 <- parsnip::boost_tree() |>
  parsnip::set_engine("xgboost") |>
  parsnip::set_mode("classification") |>
  set_py_engine(py_module = "xgboost", py_base_learner = "XGBClassifier")
r1 <- d |>
  recipes::recipe(vs ~ .) |>
  # "pd.index" is the special column that used for indexing in pandas
  recipes::update_role(id, new_role = "pd.index")
wf <- rpwf_workflow_set(list(r1), list(m1), "neg_log_loss")

to_export <- wf |>
  rpwf_augment(db_con, dials::grid_latin_hypercube, size = 10)
print(to_export)
}
