% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04_rpwf_s3_constructors.R,
%   R/05_rpwf_workflow_export.R, R/06_rpwf_only_df_export.R
\name{rpwf_export_db}
\alias{rpwf_export_db}
\alias{rpwf_export_db.rpwf_workflow_set}
\alias{rpwf_export_db.rpwf_data_set}
\title{Generic S3 Function for \code{\link[=rpwf_augment]{rpwf_augment()}} Object into the Database}
\usage{
rpwf_export_db(obj, db_con)

\method{rpwf_export_db}{rpwf_workflow_set}(obj, db_con)

\method{rpwf_export_db}{rpwf_data_set}(obj, db_con)
}
\arguments{
\item{obj}{an augmented \code{rpwf_workflow_set()} or \code{rpwf_data_set()} object.}

\item{db_con}{(\code{DBI::dbConnect()})\cr
An \code{\link[=rpwf_connect_db]{rpwf_connect_db()}} object.}
}
\value{
number of rows exported.
}
\description{
Generic S3 Function for \code{\link[=rpwf_augment]{rpwf_augment()}} Object into the Database
}
\examples{
# Create the database
temp_dir <- withr::local_tempdir()
db_con <- rpwf_connect_db("db.SQLite", temp_dir)

# Create a `workflow_set`
d <- mtcars
d$target <- stats::rbinom(nrow(d), 1, 0.5)
m1 <- parsnip::boost_tree() |>
  parsnip::set_engine("xgboost") |>
  parsnip::set_mode("classification") |>
  set_py_engine("xgboost", "XGBClassifier", "my_xgboost_model")
r1 <- d |>
  recipes::recipe(target ~ .)
wf <- rpwf_workflow_set(list(r1), list(m1), "neg_log_loss")

to_export <- wf |>
  rpwf_augment(db_con, dials::grid_latin_hypercube, size = 10)
rpwf_write_grid(to_export)
rpwf_write_df(to_export)

# Before exporting
DBI::dbGetQuery(db_con$con, "SELECT * FROM wflow_tbl;")
# After exporting
rpwf_export_db(to_export, db_con)
DBI::dbGetQuery(db_con$con, "SELECT * FROM wflow_tbl;")
}
