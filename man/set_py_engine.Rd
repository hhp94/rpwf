% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_py_engine.R
\name{set_py_engine}
\alias{set_py_engine}
\title{Add Information about the Python Module}
\usage{
set_py_engine(obj, py_module, py_base_learner, ..., con = NULL, args = NULL)
}
\arguments{
\item{obj}{a model spec object generated by \code{\link[parsnip:set_engine]{parsnip::set_engine()}} and
\code{\link[parsnip:set_args]{parsnip::set_mode()}}.}

\item{py_module}{a character value that select the python module that the
base learner comes from (i.e., \code{xgboost}, \code{sklearn.ensemble}, etc.).}

\item{py_base_learner}{a character value that select the python base learner,
(i.e., XGBClassifier, DecisionTreeClassifier, etc.).}

\item{...}{not used. Include to force \code{con} and \code{args} to be specified by names}

\item{con}{created by \link{DbCon}.
If provided will perform check if the py_base_learner is in the database or not.}

\item{args}{arguments passed to the python base learner via named list.
Boolean must be in R format, i.e., \code{TRUE}, \code{FALSE}.}
}
\value{
a model spec object with additional attributes \code{self$py_base_learner}
and \code{self$py_base_learner_args}.
}
\description{
Augment the model spec object generated by \code{{parsnip}} with information
needed to run sklearn models. Importantly, also passes sklearn base learner
specific arguments through the \code{args} parameter.
}
\examples{
db_con <- DbCon$new("db.SQLite", tempdir())
parsnip::boost_tree() |>
  parsnip::set_engine("xgboost") |>
  parsnip::set_mode("classification") |>
  set_py_engine(
    "xgboost", "XGBClassifier", db_con$con,
    list(
      eval_metric = "logloss", use_label_encoder = FALSE,
      verbosity = 0, silent = TRUE, n_estimators = 100
    )
  )
}
