% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rpwf_main_R6_classes.R
\name{RGrid}
\alias{RGrid}
\title{Internal R6 object that process the hyper param grid generated in R}
\description{
A R6 object that manage the export of metadata and parquet file of the
hyper param grid generated in R
}
\details{
This object works by:
\itemize{
\item inherits from the \link{BaseEx} class.
\item accept a hyper param grid generated with \link{rpwf_grid_gen}.
\item calculate the hash of the grid and check the hash is in the database.
\item if the hash is found in the database:
\itemize{
\item assign the path associated with the hash of the grid to \code{self$path}.
\item check if the grid exists with \code{self$path}.
\item if not exists, assign the grid to \code{self$df}.
\item if the file exists, then assign \code{NULL} to the \code{self$df} attribute to stop
\code{self$export_parquet()} from executing.
}
\item if the hash is not found in the database:
\itemize{
\item assign the grid to \code{self$df}.
\item generate a new path to write the grid.
\item generate a SQL query to update the database with the new hash and new path
}
\item update the database with the generated SQL query with \code{self$export_db()}
\item write the parquet with \code{self$export_parquet()}
}
}
\keyword{internal}
\section{Super class}{
\code{\link[rpwf:BaseEx]{rpwf::BaseEx}} -> \code{RGrid}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RGrid-new}{\code{RGrid$new()}}
\item \href{#method-RGrid-clone}{\code{RGrid$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="create_folder"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-create_folder'><code>rpwf::BaseEx$create_folder()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="exec_query"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-exec_query'><code>rpwf::BaseEx$exec_query()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="export"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-export'><code>rpwf::BaseEx$export()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="export_db"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-export_db'><code>rpwf::BaseEx$export_db()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="export_parquet"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-export_parquet'><code>rpwf::BaseEx$export_parquet()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="export_prep"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-export_prep'><code>rpwf::BaseEx$export_prep()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="find_path_in_db"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-find_path_in_db'><code>rpwf::BaseEx$find_path_in_db()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="set_db_folder"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-set_db_folder'><code>rpwf::BaseEx$set_db_folder()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="set_df"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-set_df'><code>rpwf::BaseEx$set_df()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="set_export_query"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-set_export_query'><code>rpwf::BaseEx$set_export_query()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="set_hash"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-set_hash'><code>rpwf::BaseEx$set_hash()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rpwf" data-topic="BaseEx" data-id="set_path"><a href='../../rpwf/html/BaseEx.html#method-BaseEx-set_path'><code>rpwf::BaseEx$set_path()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RGrid-new"></a>}}
\if{latex}{\out{\hypertarget{method-RGrid-new}{}}}
\subsection{Method \code{new()}}{
Create a new instance of the RGrid class. These are grids made by
functions such as \code{dials::grid_latin_hypercube} and \code{dials::grid_regular}.
See \link{BaseEx} for details of the attributes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RGrid$new(grid_obj, db_con)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{grid_obj}}{(\code{rpwf::rpwf_grid_gen()})\cr
\code{\link[=rpwf_grid_gen]{rpwf_grid_gen()}} performs necessary clean ups before the grid can
be used in python.}

\item{\code{db_con}}{(\code{DbCon})\cr
a \link{DbCon} object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RGrid-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RGrid-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RGrid$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
